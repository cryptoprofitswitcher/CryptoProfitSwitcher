{
  // Set your expected hashrates for the algorithms
  "CryptonightV7Hashrate": 4000,
  "CryptonightHeavyHashrate": 3000,
  "CryptonightLiteHashrate": 8000,
  // Timeframe for the profit calculation, can be Live or Day
  "ProfitTimeframe": "Live",
  // Comma seperated string with the pool profit providers. Order is important, the first ones are preferred.
  // Available: MineCryptonightApi, CryptunitApi, MinerRocksApi, HeroMinersApi, CryptoknightCCApi (disabled by default because it's a bit slow)
  "PoolProfitProviders": "CryptunitApi,MinerRocksApi, HeroMinersApi, CryptoknightCCApi,MineCryptonightApi",
  // Set the strategy of profit switching, can be:
  // MaximizeFiat: Will maximize the profit in US dollar (default)
  // MaximizeCoins: Will try to maximize coin reward by comparing the current reward with the reward of the last 24 hours, this setting will ignore the price of the coins and is only compatible with miner.rocks profit provider
  // WeightedCoinsPrice: Will combine both by multiplicating the fiat reward with the relative coin reward
  "ProfitSwitchingStrategy": "MaximizeFiat",
  // Time in seconds between profit checks
  "ProfitCheckInterval": 600,
  // Time in seconds until a profit switch can happen again
  "ProfitSwitchCooldown": 0,
  // Threshold between current profit and most profitable coin before switching (e.g. 0 means switch immediately, 0.1 means switch when the most profitable coin is 10% percent more profitable than current)
  "ProfitSwitchThreshold": 0,
  // Sorting mode of the displayed coins and NiceHash algorithms, can be: None, ProfitLive, ProfitDay, Coins
  "ProfitSorting": "ProfitLive",
  // Time in seconds between update of current status
  "DisplayUpdateInterval": 10,
  // Path to script that runs when reset is executed, can be null.
  "ResetScript": "ResetScript.bat",
  // Delay in seconds before the mining process starts
  "MinerStartDelay": 3,
  // Set if the miner should start minimized, can be true or false
  "StartMinerMinimized": true,
  // Enable or disable caching of JSON Api calls, can be true or false
  "EnableCaching": false,
  // Enable or disable logging, can be true or false
  "EnableLogging": false,
  // Enable or disable watchdog (compares actual hashrate with expected hashrate and resets if certain conditions are met), can be true or false
  "EnableWatchdog": true,
  // Delay in seconds before watchdog starts
  "WatchdogDelay": 60,
  // Time in seconds between watchdog checks
  "WatchdogInterval": 60,
  // If the actual hashrate is under ExpectedHashrate x WatchdogCriticalThreshold then it is an overstep
  "WatchdogCriticalThreshold": 0.9,
  // Number of allowed consecutive oversteps, if this is exceeded, it will reset.
  "WatchdogAllowedOversteps": 10
}
